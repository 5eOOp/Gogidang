<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	 
<mapper namespace="com.spring.mapper.ReviewMapper">

	<select id="getList" resultType="ReviewVO">
		select * from review
	</select>

	<select id="getListWithPaging" resultType="ReviewVO">
		<![CDATA[
		select review_num, title, nickname, s_name, star, review_date
		from
			( 	select /*+ INDEX_DESC(review pk_review) */ 
					rownum rn, review_num, title, nickname, s_name, star, review_date
				from review
				where rownum <= #{pageNum} * #{amount}  )
		where rn > (#{pageNum}-1) * #{amount}
		]]>
	</select>
	
	<select id="getListByIdWithPaging" resultType="ReviewVO">
		<![CDATA[
		select review_num, title, u_id, content, nickname, s_name, star, review_date
		from
			( 	select /*+ INDEX_DESC(review pk_review) */ 
					rownum rn, review_num, title, u_id,content, nickname, s_name, star, review_date
				from (	select * 
						from review 
						where u_id = #{u_id} )
				where rownum <= #{pageNum} * #{amount}  )
		where rn > (#{pageNum}-1) * #{amount}
		]]>
	</select>
	
	<select id="getListBySnWithPaging" resultType="ReviewVO">
		<![CDATA[
		select review_num, title, u_id, content, nickname, s_name, star, review_date
		from
			( 	select /*+ INDEX_DESC(review pk_review) */ 
					rownum rn, review_num, title, u_id,content, nickname, s_name, star, review_date
				from (	select * 
						from review 
						where s_num = #{s_num} )
				where rownum <= #{pageNum} * #{amount}  )
		where rn > (#{pageNum}-1) * #{amount}
		]]>
	</select>
	
	<select id="getReview" parameterType="int" resultType="ReviewVO">
		select * from review where review_num = #{review_num}
	</select>

	
	<insert id="regReview" parameterType="ReviewVO">
		INSERT INTO review (review_num, u_id, nickname, s_num, s_name, title, content, star, review_img1, review_img2, review_img3) 
		VALUES (seq_review.nextval
			  , #{u_id}
			  , #{nickname}
			  , #{s_num}
			  , #{s_name}
			  , #{title}
			  , #{content}
			  , #{star}
	    	  , #{review_img1}
	    	  , #{review_img2}
	    	  , #{review_img3})
	</insert>
		
	<select id="getTotal" resultType="int">
		select count(*) from review where review_num > 0
	</select>
	
	<select id="getReviewListAjax" parameterType="java.util.HashMap" resultType="ReviewVO">
		select distinct re.review_num, re.s_name, re.title, re.star, re.review_img1, re.review_date, mr.meat
		from menu_reg mr INNER JOIN shop_reg sr ON mr.s_num=sr.s_num INNER JOIN review re ON sr.s_num=re.s_num
		where re.review_num > 0
		<if test="s_addr != null">
			AND substr(sr.s_addr,1,2) IN <foreach collection="s_addr" item="item" index="index" open="(" close=")" separator=",">#{item}</foreach>
		</if>
		<if test="meat != null">
			AND mr.meat IN<foreach collection="meat" item="item" index="index" open="(" close=")" separator=",">#{item}</foreach>
		</if>
	</select>

</mapper>

	<!--
 	<update id="update">
		update review
		set content = #{content}
		where review_num=#{review_num}
	</update>
	
	<delete id="delete">
		delete from review where review_num=#{review_num}
	</delete> 
	-->